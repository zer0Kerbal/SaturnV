PART
{
	// --- general parameters ---
	name = DECQ-LEM-engine-D
	module = Part
	author = DECQ

	// --- asset parameters ---
	MODEL
	{
		model = DECQ/SaturnV/Assets/LEM/LEM-descent-engine
		scale = 0.64, 0.64, 0.64
	}
	scale = 0.64
	//mesh = model.mu
	rescaleFactor = 1
	specPower = 500.1

	node_stack_top = 0.0, -1.084174, 0.0, 0.0, -1.0, 0.0, 1
	node_stack_bottom = 0.0, -1.563386, 0.0, 0.0, -1.0, 0.0, 2, 1, 1

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,0

	// --- FX definitions ---
	fx_exhaustFlame_blue_small = 0.0, -0.5337813, 0.1355984, 0.0, 1.0, 0.0, running
	fx_exhaustLight_blue = 0.0, -0.5337813, 0.1355984, 0.0, 0.0, 1.0, running

	// --- editor parameters ---
	TechRequired = generalRocketry
	entryCost = 3000
	cost = 800
	category = Propulsion
	subcategory = 0
	title = Apollo LMDE
	manufacturer = Thomson-Ramo-Woolridge Inc.
	description = The Lunar Module Descent Engine is the main engine of the Apollo LM descent stage. Small, deeply throttleable and reasonably powerful, it's the perfect choice for a lunar landing.
	tags = SATURN_V

	// --- standard part parameters ---
	mass = 0.3

	dragModelType = default
	maximum_drag = 0.3
	minimum_drag = 0.2
	angularDrag = 2

	crashTolerance = 30

	stageAfter = True
	stageBefore = True

	maxTemp = 1400
	//fuelCrossFeed = False
	bulkheadProfiles = size0

	MODULE
	{
		name = ModuleGimbal
		gimbalTransformName = thrustTransform
		gimbalRange = 0.2
	}

	MODULE
	{
		name = FXModuleAnimateThrottle
		animationName = lemD
		responseSpeed = 0.002
		dependOnEngineState = True
		dependOnThrottle = True
	}

// ModuleAlternator
	MODULE
	{
		name = ModuleAlternator
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.2
		}
	}

	MODULE
	{
		name = ModuleEnginesFX
		engineID = LES
		powerEffectName = running
		thrustVectorTransformName = thrustTransform
		exhaustDamage = True
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 40
		heatProduction = 150
		fxOffset = 0, 0, 1.2
		PROPELLANT
		{
			name = MonoPropellant
			resourceFlowMode = STACK_PRIORITY_SEARCH
			ratio = 1
			DrawGauge = True
		}
		atmosphereCurve
		{
			 key = 0 311
			 key = 1 100
			 key = 4 0.001
		}
	}

	MODULE
	{
		name = ModuleSurfaceFX
		thrustProviderModuleIndex = 0
		fxMax = 0.4
		maxDistance = 15
		falloff = 2
		thrustTransformName = thrustTransform
	}

	RESOURCE
	{
		name = ElectricCharge
		amount = 50
		maxAmount = 50
	}

	EFFECTS
	{
		running
		{
			AUDIO
			{
				channel = Ship
				clip = sound_rocket_mini
				volume = 0.0 0.0
				volume = 1.0 0.5
				pitch = 0.0 0.5
				pitch = 1.0 1.0
				loop = true
			}
			MODEL_MULTI_PARTICLE
			{
				modelName = Squad/FX/Monoprop_big
				transformName = thrustTransform
				emission = 0.0 0.0
				emission = 0.4 0.8
				emission = 1.0 1.0
				speed = 0.0 0.8
				speed = 1.0 1.0
				//localOffset = 0, 0, 1
			}
		}
		engage
		{
			AUDIO
			{
				channel = Ship
				clip = sound_vent_soft
				volume = 1.0
				pitch = 2.0
				loop = false
			}
		}
		flameout
		{
			PREFAB_PARTICLE
			{
				prefabName = fx_exhaustSparks_flameout_2
				transformName = FXTransform
				oneShot = true
			}
			AUDIO
			{
				channel = Ship
				clip = sound_explosion_low
				volume = 1.0
				pitch = 2.0
				loop = false
			}
		}	
	}
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = True
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 600
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 300
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1200
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 600
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2500
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
	}
}